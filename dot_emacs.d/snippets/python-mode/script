# -*- mode: snippet -*-
# name: script
# key: script
# --
#!/usr/bin/env python3

import argparse
import contextlib
import sys


def main(args):
    pass


@contextlib.contextmanager
def debug_on_except():
    try:
        yield
    finally:
        if isinstance(sys.exc_info()[1], Exception):
            import traceback

            try:
                import ipdb as pdb
            except ImportError:
                import pdb

            traceback.print_exc()
            pdb.post_mortem()


def arg_main():
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "--pdb",
        action="store_true",
        help="Start a pdb post mortem on uncaught exception",
    )

    args = parser.parse_args()

    with contextlib.ExitStack() as stack:
        if args.pdb:
            stack.enter_context(debug_on_except())

        main(args)


if __name__ == "__main__":
    arg_main()
