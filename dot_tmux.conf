set -gw mode-keys emacs
set -gw status-keys emacs
set -g history-limit 10000
setw -g aggressive-resize on

if-shell "[ $(expr $(tmux -V | cut -d' ' -f2) \"<\" 1.9) -eq 1 ]" \
         "set -g default-path \"$HOME\""

set -g default-command $SHELL

set -g default-terminal tmux

#Mimic my screen setup
unbind C-b
set -g prefix C-z
bind z send-prefix

unbind l
bind C-z last-window
bind C-c new-window

bind C-d detach

unbind ,
bind a command-prompt "rename-window %%"
unbind '$'
bind C-a command-prompt "rename-session %%"
set -g set-titles on
set -g set-titles-string '#S:#I.#P #W'

unbind %
unbind '"'
if-shell "[ $(expr $(tmux -V | cut -d' ' -f2) \">=\" 1.9) -eq 1 ]" \
      "bind | split-window -h -c \"#{pane_current_path}\"; \
       bind - split-window -v -c \"#{pane_current_path}\"" \
      "bind | set default-path \"\" \\; split-window -h \\; set -u default-path; \
       bind - set default-path \"\" \\; split-window -v \\; set -u default-path"

bind v paste-buffer

bind S setw synchronize-panes

# Enable truecolor in tmux
set-option -sa terminal-overrides ",xterm*:Tc"


#Status bar
set -g status-bg black
set -g status-fg green
set-window-option -g window-status-current-style fg=red
# Mouse manipulation
if-shell "[ $(expr $(tmux -V | cut -d' ' -f2) \"<\" 2.1) -eq 1 ]" \
         "setw -g mode-mouse on; set -g mouse-select-pane on; set -g mouse-resize-pane on; set -g mouse-select-window on" \
         "set -g mouse on"

#Start/stop updating the environment,
# because sometimes I want the DISPLAY to remain on server-side.
set -g update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"
bind C-D if-shell 'tmux show-options | grep update-environment' \
             'set -u update-environment' \
	     'set update-environment ""'

# bind b new-session -d -s temp \; \
#        move-window -t temp \; \
#        kill-window -t temp:0 \; \
#        set -t temp status off \; \
#        run-shell "TMUX='' xterm -e tmux a -t temp; \
#                           tmux move-window -s temp:1 -t $(tmux display-message -p \"#S\"): &> /dev/null; \
#                           :" # Empty command needed to silence "tmux move-window" if the window no longer exists

set -g status-right '#(whoami)@#H %Y-%m-%d %H:%M'

bind P run-shell -b "xterm -e ipython3"